{"version":3,"file":"brew-auth-msal.min.js","mappings":"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","sources":["webpack://brew-extension-auth-msal/webpack/universalModuleDefinition","webpack://brew-extension-auth-msal/external umd {\"commonjs\":\"@azure/msal-browser\",\"commonjs2\":\"@azure/msal-browser\",\"amd\":\"@azure/msal-browser\",\"root\":\"msal\"}","webpack://brew-extension-auth-msal/external umd {\"commonjs\":\"brew-js\",\"commonjs2\":\"brew-js\",\"amd\":\"brew-js\",\"root\":\"brew\"}","webpack://brew-extension-auth-msal/external umd {\"commonjs\":\"zeta-dom\",\"commonjs2\":\"zeta-dom\",\"amd\":\"zeta-dom\",\"root\":\"zeta\"}","webpack://brew-extension-auth-msal/webpack/bootstrap","webpack://brew-extension-auth-msal/webpack/runtime/define property getters","webpack://brew-extension-auth-msal/webpack/runtime/hasOwnProperty shorthand","webpack://brew-extension-auth-msal/../brew-extension-auth|umd|C:/brew-js/util/common.js","webpack://brew-extension-auth-msal/../brew-extension-auth|umd|C:/brew-js/util/path.js","webpack://brew-extension-auth-msal/../brew-extension-auth|umd|C:/zeta-dom/util.js","webpack://brew-extension-auth-msal/./src/msal.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@azure/msal-browser\"), require(\"brew-js\"), require(\"zeta-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@misonou/brew-extension-auth/msal\", [\"@azure/msal-browser\", \"brew-js\", \"zeta-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MsalAuthProvider\"] = factory(require(\"@azure/msal-browser\"), require(\"brew-js\"), require(\"zeta-dom\"));\n\telse\n\t\troot[\"brew\"] = root[\"brew\"] || {}, root[\"brew\"][\"Auth\"] = root[\"brew\"][\"Auth\"] || {}, root[\"brew\"][\"Auth\"][\"MsalAuthProvider\"] = factory(root[\"msal\"], root[\"brew\"], root[\"zeta\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__735__, __WEBPACK_EXTERNAL_MODULE__760__, __WEBPACK_EXTERNAL_MODULE__231__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__735__;","module.exports = __WEBPACK_EXTERNAL_MODULE__760__;","module.exports = __WEBPACK_EXTERNAL_MODULE__231__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","import lib from \"brew-js\";\r\nconst { getJSON } = lib;\r\nexport { getJSON };","import lib from \"brew-js\";\r\nconst { isSubPathOf } = lib;\r\nexport { isSubPathOf };","import lib from \"zeta-dom\";\r\nconst { define, extend, is } = lib.util;\r\nexport { define, extend, is };","import { EventType, PublicClientApplication } from \"@azure/msal-browser\";\r\nimport { getJSON } from \"brew-js/util/common\";\r\nimport { isSubPathOf } from \"brew-js/util/path\";\r\nimport { define, extend, is } from \"zeta-dom/util\";\r\n\r\nconst AUTHORITY_URI = 'https://login.microsoftonline.com/';\r\n\r\nconst MsalAuthProvider = {};\r\nconst issuerCache = {};\r\nconst multitenant = {\r\n    common: true,\r\n    organizations: true\r\n};\r\nconst defaultConfig = {\r\n    cache: {\r\n        cacheLocation: 'localStorage'\r\n    }\r\n};\r\n\r\nfunction clearInteractionStatus() {\r\n    delete sessionStorage['msal.interaction.status'];\r\n}\r\n\r\nfunction getIssuerURL(domain) {\r\n    return issuerCache[domain] || (issuerCache[domain] = getJSON(AUTHORITY_URI + domain + '/v2.0/.well-known/openid-configuration').then(function (v) {\r\n        return v.issuer;\r\n    }, function (xhr) {\r\n        if (xhr.status === 400) {\r\n            return '';\r\n        }\r\n        delete issuerCache[domain];\r\n    }));\r\n}\r\n\r\n/**\r\n * @param {string} key\r\n * @param {PublicClientApplication} client\r\n * @param {*} options\r\n */\r\nfunction createProvider(key, client, options) {\r\n    var scopes = options.scopes;\r\n\r\n    function refresh(current, context) {\r\n        return client.acquireTokenSilent({\r\n            redirectUri: context.redirectUri,\r\n            account: current.account,\r\n            scopes: scopes\r\n        });\r\n    }\r\n\r\n    function handleResult(result) {\r\n        if (result) {\r\n            var account = result.account;\r\n            client.setActiveAccount(account);\r\n            return {\r\n                account: account,\r\n                accountId: account.homeAccountId,\r\n                accessToken: result.accessToken,\r\n                expiresOn: result.expiresOn\r\n            };\r\n        }\r\n    }\r\n\r\n    return {\r\n        key: key,\r\n        authType: 'federated',\r\n        providerType: 'msal',\r\n        refresh: refresh,\r\n        isHandleable: function (loginHint) {\r\n            if (!/@(.+)$/.test(loginHint)) {\r\n                return false;\r\n            }\r\n            var authority = client.getConfiguration().auth.authority;\r\n            if (multitenant[authority.slice(AUTHORITY_URI.length)]) {\r\n                return true;\r\n            }\r\n            return getIssuerURL(RegExp.$1).then(function (issuer) {\r\n                return !!isSubPathOf(issuer, authority);\r\n            });\r\n        },\r\n        init: function (context) {\r\n            client.enableAccountStorageEvents();\r\n            client.addEventCallback(function (message) {\r\n                if (message.eventType === EventType.ACCOUNT_REMOVED) {\r\n                    context.revokeSession(message.payload.homeAccountId);\r\n                }\r\n            });\r\n            return client.initialize().then(function () {\r\n                var account = client.getActiveAccount();\r\n                return account ? refresh({ account }, context) : client.handleRedirectPromise();\r\n            }).then(handleResult);\r\n        },\r\n        login: function (params, context) {\r\n            var request = {\r\n                redirectUri: context.redirectUri,\r\n                loginHint: params.loginHint,\r\n                scopes: scopes\r\n            };\r\n            clearInteractionStatus();\r\n            if (params.interaction === 'popup') {\r\n                return client.loginPopup(request).then(handleResult);\r\n            } else {\r\n                return client.loginRedirect(request);\r\n            }\r\n        },\r\n        logout: function (params, context) {\r\n            var account = client.getAccount({\r\n                homeAccountId: params.accountId\r\n            });\r\n            if (!params.singleLogout) {\r\n                return client.clearCache({ account });\r\n            }\r\n            clearInteractionStatus();\r\n            if (params.interaction === 'popup') {\r\n                return client.logoutPopup({ account });\r\n            } else {\r\n                return client.logoutRedirect({\r\n                    account: account,\r\n                    postLogoutRedirectUri: context.redirectUri\r\n                });\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\ndefine(MsalAuthProvider, {\r\n    defaultConfig: defaultConfig,\r\n    setDefault: function (config) {\r\n        extend(true, defaultConfig, config);\r\n    },\r\n    create: function (key, options, authority, scopes) {\r\n        if (typeof options === 'string') {\r\n            options = {\r\n                scopes: scopes,\r\n                config: {\r\n                    auth: {\r\n                        clientId: options,\r\n                        authority: authority\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        var client = is(options, PublicClientApplication) || new PublicClientApplication(extend(true, {}, defaultConfig, options.config));\r\n        return createProvider(key, client, options);\r\n    }\r\n});\r\n\r\nexport default MsalAuthProvider;\r\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__735__","__WEBPACK_EXTERNAL_MODULE__760__","__WEBPACK_EXTERNAL_MODULE__231__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getJSON","lib","isSubPathOf","_lib$util","extend","is","AUTHORITY_URI","MsalAuthProvider","issuerCache","multitenant","common","organizations","defaultConfig","cache","cacheLocation","clearInteractionStatus","sessionStorage","createProvider","client","options","scopes","refresh","current","context","acquireTokenSilent","redirectUri","account","handleResult","result","setActiveAccount","accountId","homeAccountId","accessToken","expiresOn","authType","providerType","isHandleable","loginHint","test","domain","authority","getConfiguration","auth","slice","length","RegExp","$1","then","v","issuer","xhr","status","init","enableAccountStorageEvents","addEventCallback","message","eventType","EventType","ACCOUNT_REMOVED","revokeSession","payload","initialize","getActiveAccount","handleRedirectPromise","login","params","request","interaction","loginPopup","loginRedirect","logout","getAccount","singleLogout","logoutPopup","logoutRedirect","postLogoutRedirectUri","clearCache","setDefault","config","create","clientId","PublicClientApplication"],"sourceRoot":""}